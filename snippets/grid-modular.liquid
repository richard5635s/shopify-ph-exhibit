{%- liquid
  assign media_classes = 'absolute inset-0 w-full h-full object-cover'
  assign media_wrapper_classes = 'w-full grow overflow-hidden'
  assign item_separator = '||__modular-item__||'

  # Set base for sizes on desktop

  if settings.enable_sidebar
    assign sidebar_width = 100.00 | divided_by: 12 | times: settings.sidebar_width_on_desktop | round: 2
    assign desktop_sizes_base = 100 | minus: sidebar_width
  else
    assign desktop_sizes_base = 100
  endif

  assign desktop_sizes_css_base = desktop_sizes_base | append: 'vw'

  if settings.enable_max_grid_width
    assign desktop_sizes_css_base = 'min(' | append: settings.max_grid_width | append: 'px, ' | append: desktop_sizes_base | append: 'vw)'
  endif

  capture modular_items
    case content_source
      when 'collection'
        if section.settings.modular_no_crop_media_mobile == true
          assign media_classes = 'lg:absolute lg:inset-0 lg:w-full lg:h-full lg:object-cover'
          assign media_wrapper_classes = 'w-full lg:grow overflow-hidden'
        endif
        for product in products limit: section.settings.products_to_show
          render 'tile-product', product: product, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
          echo item_separator
        else
          assign number_of_products_to_show = section.settings.products_to_show | default: 6
          for i in (1..number_of_products_to_show)
            render 'tile-placeholder', tag: 'div', placeholder_index: forloop.index, type: 'product', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, placeholder_svg_classes: 'w-full h-full'
            echo item_separator
          endfor
        endfor
      when 'blocks'
        for block in section.blocks
          case block.type
            when 'image'
              assign media = block.settings.image
              if media != blank
                render 'tile-image', image: media, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', caption: block.settings.caption, link: block.settings.link, sizes: '[SIZES]'
                echo item_separator
                continue
              endif
            when 'video'
              assign media = block.settings.video
              if media != blank
                render 'tile-video', video: media, mode: block.settings.mode, playback: block.settings.playback, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', caption: block.settings.caption, link: block.settings.link, sizes: '[SIZES]'
                echo item_separator
                continue
              endif
            when 'collection'
              assign media = block.settings.collection
              if media != blank
                render 'tile-collection', collection: media, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
                echo item_separator
                continue
              endif
            when 'product'
              assign media = block.settings.product
              if media != blank
                render 'tile-product', product: media, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
                echo item_separator
                continue
              endif
          endcase
          render 'tile-placeholder', caption: block.settings.caption, tag: 'div', placeholder_index: forloop.index, type: block.type, class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, placeholder_svg_classes: 'w-full h-full'
          echo item_separator
        endfor
      when 'collection_list'
        for collection in collections
          render 'tile-collection', collection: collection, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
          echo item_separator
        else
          for i in (1..3)
            render 'tile-placeholder', block: block, tag: 'div', placeholder_index: forloop.index, type: 'collection', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, placeholder_svg_classes: 'w-full h-full'
            echo item_separator
          endfor
        endfor
      when 'articles'
        for article in articles
          render 'tile-article', article: article, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', show_title: section.settings.show_title, show_author: section.settings.show_author, show_date: section.settings.show_date, show_excerpt: section.settings.show_excerpt, title_font: section.settings.title_font, sizes: '[SIZES]'
          echo item_separator
        else
          for i in (1..3)
            render 'tile-placeholder', block: block, tag: 'div', placeholder_index: forloop.index, type: 'image', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, placeholder_svg_classes: 'w-full h-full'
            echo item_separator
          endfor
        endfor
      when 'product_media'
        for media in product.media
          unless media.id == product.featured_media.id and section.settings.hide_featured_media
            case media.media_type
              when 'video', 'external_video'
                render 'tile-video', video: media, mode: section.settings.video_mode, playback: section.settings.video_playback, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
              when 'image'
                render 'tile-image', image: media, tag: 'div', class: 'w-full h-full flex flex-col', media_wrapper_classes: media_wrapper_classes, media_classes: media_classes, content_wrapper_classes: 'py-2', sizes: '[SIZES]'
            endcase
            echo item_separator
          endunless
        endfor
    endcase
  endcapture

  assign modular_items_array = modular_items | split: item_separator
-%}

{%- style -%}
  #section-{{ section.id }} .grid-wrapper {
    --width: min({% if settings.enable_max_grid_width %}var(--max-grid-width){% else %}100vw{% endif %}, calc(100vw - var(--sidebar-width)));
    --number-of-columns: {{ section.settings.mobile_columns }};
    --number-of-gutters: calc(var(--number-of-columns) - 1);
    --total-gutter-size: calc(var(--media-grid-col-gap) * var(--number-of-gutters));
    --total-outer-margin: 0px;
    {%- if settings.inset_secondary_tertiary_sections and section.settings.color_scheme != 'primary' -%}
    --total-outer-margin:calc(var(--wrapper-left-and-right-margin) * 2);
    {%- endif -%}
    --total-inner-margin: {% if section.settings.disable_left_and_right_margins %}0px{% else %}calc(var(--wrapper-left-and-right-margin) * 2){% endif %};
    --total-space: calc(var(--total-outer-margin) + var(--total-inner-margin) + var(--total-gutter-size));
    --grid-item-width: calc((var(--width) - var(--total-space))/var(--number-of-columns));
    --grid-item-aspect-ratio: {{ section.settings.modular_grid_item_aspect_ratio }};

    {% if section.settings.disable_left_and_right_margins %}
      --wrapper-left-and-right-margin: 0px;
    {% endif %}
    {% if section.settings.remove_grid_gaps %}
      --media-grid-col-gap: 0px;
      --media-grid-row-gap: 0px;
      --media-grid-gap: 0px;
    {% endif %}
  }
  #section-{{ section.id }} .modular-grid {
    width: var(--width);
    display: grid;
    grid-template-columns: repeat(var(--number-of-columns), var(--grid-item-width));
    {% if section.settings.modular_no_crop_media_mobile == false or content_source != 'collection' %}
    grid-auto-rows: calc(var(--grid-item-width) * var(--grid-item-aspect-ratio));
    {% endif %}
    gap: var(--media-grid-col-gap);
  }

  #section-{{ section.id }} .modular-grid-item {
    --item-col-span:  var(--mobile-col-span);
    --item-row-span: var(--mobile-row-span);
  }

  @media (min-width: 990px) {
    #section-{{ section.id }} .grid-wrapper {
      --number-of-columns: 12;
    }
    {% if section.settings.modular_no_crop_media_mobile == true and content_source == 'collection' %}
    #section-{{ section.id }} .modular-grid {
      grid-auto-rows: calc(var(--grid-item-width) * var(--grid-item-aspect-ratio));
    }
    {% endif %}
    #section-{{ section.id }} .modular-grid-item {
      --item-col-span: var(--desktop-col-span);
      --item-row-span: var(--desktop-row-span);
    }
  }
{%- endstyle -%}

<div class="relative grid-wrapper overflow-hidden">
  <ul
    {% if id %}
      id="{{ id }}"
    {% endif %}
    class="modular-grid grid-flow-dense"
  >
    {%- for item in modular_items_array -%}
      {%- liquid
        capture item_spans
          case section.settings.modular_layout_variation
            when 1
              cycle '8-8', '4-4', '4-4', '4-4', '8-8', '4-4'
            when 2
              cycle '4-4', '8-8', '4-4', '8-8', '4-4', '4-4'
            when 3
              cycle '8-8', '4-4', '4-4', '4-4', '4-4', '4-4', '4-4', '8-8', '4-4'
            when 4
              cycle '8-8', '4-4', '4-8', '8-4', '4-4', '8-8', '4-8', '8-4'
            when 5
              cycle '4-4', '8-4', '8-4', '4-4'
            when 6
              cycle '6-6', '3-3', '3-3', '6-6', '3-3', '3-3'
            when 7
              cycle '4-4', '8-8', '4-4', '4-8', '4-4', '4-4', '4-4', '4-8', '8-8', '4-4'
            when 8
              cycle '6-6', '3-3', '3-3', '3-3', '3-3', '3-3', '3-3', '6-6', '3-3', '3-3'
            when 9
              cycle '3-3', '3-6', '6-6', '3-3', '6-6', '3-6', '3-3', '3-3'
            when 10
              cycle '6-3', '3-3', '3-6', '3-3', '6-6', '3-3', '3-6', '3-3', '6-3'
            when 11
              cycle '3-3', '3-3', '3-3', '3-3', '3-3', '6-6', '3-3', '3-3', '3-3', '3-3', '3-3', '3-3', '3-3'
            when 12
              cycle '3-3', '6-6', '3-6', '3-6', '3-3', '6-3', '6-6', '3-6', '3-3', '3-3', '6-3', '3-3', '3-3'
          endcase
        endcapture
        capture mobile_col_spans
          if section.settings.mobile_columns == 2
            cycle '2-2', '1-1', '1-1'
          else
            echo '1-1'
          endif
        endcapture
        assign item_class = 'w-full h-full overflow-hidden col-span-item row-span-item'

        # Calculate sizes

        assign mobile_col_span = mobile_col_spans | split: '-' | first
        assign desktop_col_span = item_spans | split: '-' | first

        assign mobile_sizes = 'calc(100vw / ' | append: section.settings.mobile_columns | append: ' * ' | append: mobile_col_span | append: ')'

        assign desktop_sizes = 'calc(' | append: desktop_sizes_css_base | append: ' / 12' | append: ' * ' | append: desktop_col_span | append: ')'

        assign sizes = '(min-width: 990px) ' | append: desktop_sizes | append: ', ' | append: mobile_sizes
      -%}
      <li
        class="modular-grid-item {{ item_class }}"
        style="--mobile-col-span: {{ mobile_col_spans | split: '-' | first }}; --mobile-row-span: {{ mobile_col_spans | split: '-' | last }}; --desktop-col-span: {{ item_spans | split: '-' | first }}; --desktop-row-span: {{ item_spans | split: '-' | last }};"
      >
        {{ item | replace: '[SIZES]', sizes }}
      </li>
    {%- endfor -%}
  </ul>
</div>
