{%- liquid
  assign section_color = section.settings.color_scheme
  assign question_font = section.settings.question_font
  assign question_size = section.settings.question_size

-%}

<section class="section-container" data-color-scheme="{{ section_color }}" style="--top-spacing-adjust: {{ section.settings.space_above }}; --bottom-spacing-adjust: {{ section.settings.space_below }};">
  <div class="text-scheme-text bg-scheme-background pt-top-section-vertical-spacing pb-bottom-section-vertical-spacing">
    <div class="wrapper">

      {%- if section.settings.show_top_border -%}
      <hr class="border-t-theme border-scheme-border mb-half-section-vertical-spacing">
      {%- endif -%}

      <div class="grid lg:grid-cols-12 gap-theme">

        {%- unless section.settings.title == blank -%}
        <div class="lg:col-span-section-title min-w-0">
          <div>
          <h2 class="font-heading text-heading-standard empty:hidden break-words">
              {{ section.settings.title }}
          </h2>
        </div>
        </div>
        {%- endunless -%}

        <div class="lg:col-span-section-content lg:col-end-[-1] min-w-0">
          <div>
            {% for block in section.blocks %}
              <div {{ block.shopify_attributes }}>
                <div
                  x-data="{ expanded: false }"
                  class="
                    border-b
                    {% if forloop.last %}
                      border-b-transparent
                    {% else %}
                      border-b-theme border-scheme-border
                    {% endif %}
                  "
                >
                  <h2 class="{{ question_font }} {{ question_size }} break-words">
                    <button
                      type="button"
                      @click="expanded = ! expanded"
                      aria-controls="answer-{{ section.id }}-{{ block.id }}"
                      :aria-expanded="expanded ? true : 'false'"
                      class="text-left cursor-pointer flex justify-between items-center w-full py-4 break-words"
                    >
                      <span class="break-words">{{ block.settings.question | strip }}</span>
                      <span
                        class="w-5 h-5 shrink-0 inline-block transition-transform ease-gentle duration-[280ms]"
                        x-cloak
                      >
                        {%- if settings.accordion_icon == 'plus_minus' -%}
                        <span x-show="expanded">{% render 'icon-minus' %}</span>
                        <span x-show="!expanded">{% render 'icon-plus' %}</span>
                        {%- else -%}
                        <span class="block rotate-180" x-show="expanded">{% render 'icon-chevron-down' %}</span>
                        <span x-show="!expanded">{% render 'icon-chevron-down' %}</span>
                        {%- endif -%}
                      </span>
                    </button>
                  </h2>
                  <div
                    id="answer-{{ section.id }}-{{ block.id }}"
                    x-show="expanded"
                    x-collapse
                    x-cloak
                  >
                    <div class="rte richtext text-base break-words  pb-half-section-vertical-spacing">
                      {{ block.settings.answer }}
                    </div>
                  </div>
                </div>
              </div>
            {% endfor %}
          </div>
        </div>

      </div>


    </div>
  </div>  
</section>

{% schema %}
{
  "name": "FAQ",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "FAQs"
    },
    {
      "type": "radio",
      "id": "question_font",
      "label": "Question font",
      "options": [
        {
          "value": "font-heading text-secondary",
          "label": "Heading"
        },
        {
          "value": "font-main",
          "label": "Body"
        }
      ],
      "default": "font-heading text-secondary"
    },
    {
      "type": "checkbox",
      "id": "show_top_border",
      "label": "Show top border",
      "default": false
    },
    {
      "type": "header",
      "content": "Color"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "default": "scheme_1",
      "label": "Color scheme"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "space_above",
      "min": 0,
      "max": 2,
      "step": 0.5,
      "unit": "x",
      "label": "Above",
      "default": 1
    },
    {
      "type": "range",
      "id": "space_below",
      "min": 0,
      "max": 2,
      "step": 0.5,
      "unit": "x",
      "label": "Below",
      "default": 1
    }
  ],
  "blocks": [
    {
      "name": "Question",
      "type": "question",
      "settings": [
        {
          "type": "text",
          "id": "question",
          "label": "Question",
          "default": "Frequently asked question"
        },
        {
          "type": "richtext",
          "id": "answer",
          "label": "Answer",
          "default": "<p>Use this text to share the answer to the question with your customers.</p>"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "FAQ",
      "blocks": [
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        },
        {
          "type": "question"
        }
      ]
    }
  ],
  "disabled_on": {
    "groups": [
      "aside",
      "header",
      "footer",
      "custom.hero"
    ]
  }
}
{% endschema %}